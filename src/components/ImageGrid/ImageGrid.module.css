.ImagesGridContainer {
  --sizeEachImage: 20vw;
  --halfSizeEachImage: calc(var(--sizeEachImage) * 0.5);

  padding: 0.5rem 0;
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(var(--halfSizeEachImage), 1fr)
  );
  grid-auto-rows: minmax(var(--halfSizeEachImage), 0.5fr);
  gap: calc(var(--halfSizeEachImage) * 0.025);
  margin-bottom: var(--halfSizeEachImage);
}

.ImagesGridContainer > div {
  grid-column: auto / span 2;
  display: flex;
  flex-wrap: wrap;
  flex-grow: 1;
  width: auto;
  height: auto;
  aspect-ratio: 1;
}

.ImagesGridContainer > div:first-child {
  grid-column-start: 2;
}

.ImagesGridContainer > div > button {
  width: 100%;
  height: 100%;
  max-width: 100%;
  clip-path: polygon(0 50%, 50% 0, 50% 0, 100% 50%, 50% 100%, 50% 100%);
  transition: filter 200ms;
}

.ImagesGridContainer > div > button > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.ImagesGridContainer > div > button:focus-visible {
  clip-path: polygon(0 50%, 0 0, 100% 0, 100% 50%, 100% 100%, 0 100%);
  z-index: 1;
  transition: clip-path, filter;
  transition-duration: 100ms;
}

.ImagesGridContainer:has(button:focus-visible) button:not(:focus-visible) {
  filter: brightness(0.5) grayscale(0.5) saturate(0.5);
}

@media (hover: hover) and (pointer: fine) {
  .ImagesGridContainer > div > button:hover {
    clip-path: polygon(0 50%, 0 0, 100% 0, 100% 50%, 100% 100%, 0 100%);
    z-index: 1;
    transition: clip-path, filter;
    transition-duration: 100ms;
  }

  .ImagesGridContainer:has(button:hover) button:not(:hover) {
    filter: brightness(0.5) grayscale(0.5) saturate(0.5);
  }
}

.CenterRow {
  grid-column: 2 / span 2 !important;
}
